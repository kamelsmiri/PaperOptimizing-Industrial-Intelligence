#include <stdio.h>
#include <stdlib.h>
#include <malloc.h>
#include <stdbool.h>


typedef struct maillon {
	float valeur;
	struct maillon* suivant;
} *liste;

void insere_tete(liste* P,float val){
	liste P1 = (liste)malloc(sizeof(struct maillon));
	P1->valeur = val;
	P1->suivant = *P;
	*P = P1;
}

void afficher(liste P){
	if(P){
		printf("%g ",P->valeur);
		afficher(P->suivant);
	}
}

void afficher_inv(liste P){
	if(P){
		afficher_inv(P->suivant);
		printf("%g ",P->valeur);
	}
}

int existe(float x,liste P){
	if(P) return (P->valeur == x) || existe(x,P->suivant);
	else return false;
}

int nbocc(float x,liste P){
	if(P) return (P->valeur == x) + nbocc(x,P->suivant);
	else return 0;
}

int existe_nb(float x,liste P){
	return !!nbocc(x,P);
}

void main(){
	liste P = NULL;
	insere_tete(&P,1.3);
	insere_tete(&P,5.5);
	insere_tete(&P,7.2);
	insere_tete(&P,1.3);
	insere_tete(&P,5.3);
	insere_tete(&P,7.2);
	insere_tete(&P,1.3);
	float x = 1.4;
	printf("%g dans P? %s\n",x,existe(x,P)?"VRAI":"FAUX");
	printf("%g dans P? %s\n",1.3,existe(1.3,P)?"VRAI":"FAUX");
	printf("Occurence de %g dans P = %d\n",1.3,nbocc(1.3,P));

}
